version: "3.7"

services:
  traefik:
    image: traefik:v2.6
    # Enables the web UI and tells Traefik to listen to docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - "./traefik.yml:/etc/traefik/traefik.yml:ro"
    labels:
      - "traefik.enable=true"
    # README: Set a subdomain for the dashboard.
    # TODO: R&D about this section: *.traefik.* or *.dashboard.*
    # - "traefik.http.routers.traefik.rule=Host(`monitor.take-report.com`)"
    # #####- "traefik.http.routers.dashboard.rule=Host(`traefik.mydomain.com`)"
    # #####- "traefik.http.routers.dashboard.entrypoints=websecure"
    # #####- "traefik.http.routers.dashboard.tls=true"
    # TODO: R&D about the differences between letsencrypt and traefik-default
    # - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
    # - "traefik.http.routers.dashboard.tls.certresolver=traefik-default"
    # README: point to the dashboard
    # #####- "traefik.http.routers.dashboard.service=api@internal"
    # #####- "traefik.http.routers.dashboard.middlewares=auth"
    # README: This is the hashed password generated by htpasswd command line tool.
    # #####- "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASHBOARD_PASSWORD}"
    scale: 1
    networks:
      - traefik_default
    healthcheck:
      test: ["CMD", "./traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 3s
      retries: 30

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami:v1.8.0
    labels:
      - traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)
      - traefik.enable=true
    depends_on:
      - traefik
    scale: 1
    networks:
      - traefik_default

networks:
  traefik_default:
    name: traefik_default
